#find dependencies
FIND_PACKAGE(glm)
FIND_PACKAGE(GPUEngine REQUIRED COMPONENTS geGL geSG geUtil)

#Setup HeaderPath
SET(HEADER_PATH ${CMAKE_HOME_DIRECTORY}/include/Effects)

#Find all headers 
FILE(GLOB COMMON_HDR   ${HEADER_PATH}/*.h)
FILE(GLOB GEOMETRY_HDR ${HEADER_PATH}/geometry/*.h)
FILE(GLOB SHIELD_HDR   ${HEADER_PATH}/shield/*.h)
FILE(GLOB LASER_HDR    ${HEADER_PATH}/laser/*.h)

#Find all source code
FILE(GLOB COMMON_SRC   *.cpp)
FILE(GLOB GEOMETRY_SRC ./geometry/*.cpp)
FILE(GLOB SHIELD_SRC   ./shield/*.cpp)
FILE(GLOB LASER_SRC    ./laser/*.cpp)

# Setup Static or Shared library
IF(BUILD_SHARED_LIBS)
   ADD_DEFINITIONS(-DEffects_EXPORTS)
   MESSAGE("Configuration for SHARED library (.dll, .so)")
ELSE()
   ADD_DEFINITIONS(-DEFFECTS_STATIC_DEFINE)
   MESSAGE("Configuration for STATIC library (.lib, .a)")
ENDIF()

#Create traget library
ADD_LIBRARY(${PROJECT_NAME} 
	${COMMON_SRC}   ${COMMON_HDR}
	${GEOMETRY_SRC} ${GEOMETRY_HDR}
	${SHIELD_SRC}   ${SHIELD_HDR}
	${LASER_SRC}    ${LASER_HDR}
)

#Link dependencies
TARGET_LINK_LIBRARIES(${PROJECT_NAME} geGL geSG geUtil glm)

#Generate export header
generate_export_header(${PROJECT_NAME}) # jenom export.h
FILE(COPY ${CMAKE_CURRENT_BINARY_DIR}/${PROJECT_NAME}_export.h DESTINATION ${HEADER_PATH})

#Setting Version
SET_TARGET_PROPERTIES(${PROJECT_NAME} PROPERTIES VERSION ${${PROJECT_NAME}_VERSION})

#Include directory same interface for Build and Install
# pridate do includu vygenerovany export, jde se tak vyhnout copy
# pridat i do install
target_include_directories(${PROJECT_NAME} PUBLIC 
		"$<BUILD_INTERFACE:${CMAKE_HOME_DIRECTORY}/include>"
		"$<INSTALL_INTERFACE:$<INSTALL_PREFIX>/${CMAKE_INSTALL_INCLUDEDIR}>"
)

#Install target
# install directories
INSTALL(FILES ${COMMON_HDR}   DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}/${PROJECT_NAME})
INSTALL(FILES ${GEOMETRY_HDR} DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}/${PROJECT_NAME}/geometry)
INSTALL(FILES ${SHIELD_HDR}   DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}/${PROJECT_NAME}/shield)
INSTALL(FILES ${LASER_HDR}    DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}/${PROJECT_NAME}/laser)


#Generate Targets
INSTALL(TARGETS ${PROJECT_NAME} EXPORT  ${PROJECT_NAME}Targets
        LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR}
        ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR}
        RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR}                            
)

#Export targets
INSTALL(EXPORT ${PROJECT_NAME}Targets DESTINATION ${CMAKE_INSTALL_LIBDIR}/cmake/${PROJECT_NAME})
INSTALL(FILES ${CMAKE_CURRENT_LIST_DIR}/${PROJECT_NAME}Config.cmake DESTINATION ${CMAKE_INSTALL_LIBDIR}/cmake/${PROJECT_NAME})
